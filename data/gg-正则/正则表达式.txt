
\	// 转义符  \/\/
*	// 匹配前面的子表达式0个到多个  可有可无 {0,}
+	// 匹配前面的子表达式1个到多个 至少一个 {1,}
?	// 匹配前面的子表达式0个或1个 {0,1}\
.	// 匹配任意的单个字符 （除了“\n”字符外）
| 指明两项之间的一个选择。要匹配 |，请使用 \|。 

[abc]	// 匹配中括号里面的一个字符  bcjgffaaaaadskfds
[^abc]	// 匹配除了中括号里面指定的表达式外的其它字符
{n}		// 匹配前面的子表达式的n个 不足n
{n,}	// 匹配前面的子表达式的至少n个到多个 {1,} = +    \d{1,} =  \d+
{n,m}	// 匹配前面的子表达式的至少n个到m个
^		// 匹配输入字符串的开始位置 必须以这个字符开始
$		// 匹配输入字符串的结束位置
\d 		// 匹配数据0到9    相当于[0-9]
\w		// 匹配字符 相当于[a-zA-Z0-9_]  大小写字母加数字再加下划线
()		// 子匹配表达式


修饰符
g	// 匹配所有 会把字符串全部匹配一遍
i	// 匹配不区分大小写
m	// 匹配每行开头的字符

js中正则表达式的全局匹配模式 /g用法详细

http://www.111cn.net/wy/js-ajax/45139.htm

ar str = "123#abc";
var re = /abc/ig;
console.log(re.test(str)); //输出ture
console.log(re.test(str)); //输出false
console.log(re.test(str)); //输出ture
console.log(re.test(str)); //输出false
     在创建正则表达式对象时如果使用了“g”标识符或者设置它了的﻿global属性值为ture时，那么新创建的正则表达式对象将使用模式对要将要匹配的字符串进行全局匹配。在全局匹配模式下可以对指定要查找的字符串执行多次匹配。每次匹配使用当前正则对象的lastIndex属性的值作为在目标字符串中开始查找的起始位置。lastIndex属性的初始值为0，找到匹配的项后lastIndex的值被重置为匹配内容的下一个字符在字符串中的位置索引，用来标识下次执行匹配时开始查找的位置。如果找不到匹配的项lastIndex的值会被设置为0。当没有设置正则对象的全局匹配标志时lastIndex属性的值始终为0，每次执行匹配仅查找字符串中第一个匹配的项。可以通下面的代码来查看在执行匹配相应的lastIndex 属性的值。
 
 代码如下	复制代码
var str = "123#abc";
var re = /abc/ig;
console.log(re.test(str)); //输出ture
console.log(re.lastIndex); //输出7
console.log(re.test(str)); //输出false
console.log(re.lastIndex); //输出0
console.log(re.test(str)); //输出ture
console.log(re.lastIndex); //输出7
console.log(re.test(str)); //输出false
console.log(re.lastIndex); //输出0
修饰符
修饰符	描述
i	执行对大小写不敏感的匹配。
g	执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。
m	执行多行匹配。
方括号
方括号用于查找某个范围内的字符：
表达式	描述
[abc]	查找方括号之间的任何字符。
[^abc]	查找任何不在方括号之间的字符。
[0-9]	查找任何从 0 至 9 的数字。
[a-z]	查找任何从小写 a 到小写 z 的字符。
[A-Z]	查找任何从大写 A 到大写 Z 的字符。
[A-z]	查找任何从大写 A 到小写 z 的字符。
[adgk]	查找给定集合内的任何字符。
[^adgk]	查找给定集合外的任何字符。
(red|blue|green)	查找任何指定的选项。
元字符
元字符（Metacharacter）是拥有特殊含义的字符：
元字符	描述
.	查找单个字符，除了换行和行结束符。
w	查找单词字符。
W	查找非单词字符。
d	查找数字。
D	查找非数字字符。
s	查找空白字符。
S	查找非空白字符。
b	查找位于单词的开头或结尾的匹配。
B	查找不处在单词的开头或结尾的匹配。
查找 NUL 字符。
n	查找换行符。
f	查找换页符。
r	查找回车符。
t	查找制表符。
v	查找垂直制表符。
xxx	查找以八进制数 xxx 规定的字符。
xdd	查找以十六进制数 dd 规定的字符。
uxxxx	查找以十六进制数 xxxx 规定的 Unicode 字符。
量词
量词	描述
n+	匹配任何包含至少一个 n 的字符串。
n*	匹配任何包含零个或多个 n 的字符串。
n?	匹配任何包含零个或一个 n 的字符串。
n{X}	匹配包含 X 个 n 的序列的字符串。
n{X,Y}	匹配包含 X 或 Y 个 n 的序列的字符串。
n{X,}	匹配包含至少 X 个 n 的序列的字符串。
n$	匹配任何结尾为 n 的字符串。
^n	匹配任何开头为 n 的字符串。
?=n	匹配任何其后紧接指定字符串 n 的字符串。
?!n	匹配任何其后没有紧接指定字符串 n 的字符串。
RegExp 对象属性
FF: Firefox, IE: Internet Explorer
属性	描述	FF	IE
global	RegExp 对象是否具有标志 g。	1	4
ignoreCase	RegExp 对象是否具有标志 i。	1	4
lastIndex	一个整数，标示开始下一次匹配的字符位置。	1	4
multiline	RegExp 对象是否具有标志 m。	1	4
source	正则表达式的源文本。	1	4
RegExp 对象方法
FF: Firefox, IE: Internet Explorer
方法	描述	FF	IE
compile	编译正则表达式。	1	4
exec	检索字符串中指定的值。返回找到的值，并确定其位置。	1	4
test	检索字符串中指定的值。返回 true 或 false。	1	4
支持正则表达式的 String 对象的方法
FF: Firefox, IE: Internet Explorer
方法	描述	FF	IE
search	检索与正则表达式相匹配的值。	1	4
match	找到一个或多个正则表达式的匹配。	1	4
replace	替换与正则表达式匹配的子串。	1	4
split	把字符串分割为字符串数组。